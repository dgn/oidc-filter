---
name: Test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Start Docker
        run: |
          # Docker is pre-installed on GitHub runners, just ensure it's running
          sudo systemctl start docker
          sudo usermod -aG docker $USER

      - name: Install test dependencies
        run: |
          make test-deps

      - name: Build project
        run: |
          make image

      - name: Run tests
        run: |
          # Set up Docker permissions for the current user
          sudo chmod 666 /var/run/docker.sock
          make test

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "=== Cleanup after failure ==="
          make clean-test || true
          docker system prune -f || true
          kind delete cluster --name oidc-filter-test || true
